name: Task Management Automation v3

on:
  issues:
    types: [opened, closed, edited, labeled, unlabeled]
  issue_comment:
    types: [created, edited]

jobs:
  update-notion:
    runs-on: ubuntu-latest
    if: contains(github.event.issue.title, '[업무분담]')
    
    steps:
    - name: Update Notion Database
      uses: actions/github-script@v7
      env:
        NOTION_TOKEN: ${{ secrets.NOTION_TOKEN }}
        # UUID 형식으로 정확한 ID 사용
        NOTION_DATABASE_ID: "24b3b64b-a468-80cd-b71a-ee36f01a1573"
      with:
        script: |
          const issue = context.payload.issue;
          const action = context.payload.action;
          
          console.log(`Processing issue: ${issue.title}`);
          console.log(`Database ID: ${process.env.NOTION_DATABASE_ID}`);
          
          // CLI 이름 추출
          const cliMatch = issue.title.match(/(Gemini CLI|Codex CLI|Claude Code)/);
          const cli = cliMatch ? cliMatch[1] : 'Unknown CLI';
          
          // 상태 결정
          let status = 'pending';
          if (action === 'closed') {
            status = 'completed';
          } else if (issue.assignees && issue.assignees.length > 0) {
            status = 'in_progress';
          }
          
          // Notion 업데이트
          try {
            const https = require('https');
            
            const postData = JSON.stringify({
              parent: { 
                database_id: process.env.NOTION_DATABASE_ID 
              },
              properties: {
                'Task': {
                  title: [{ 
                    text: { 
                      content: issue.title.replace('[업무분담] ', '') 
                    } 
                  }]
                },
                'CLI': {
                  select: { name: cli }
                },
                'Status': {
                  select: { name: status }
                },
                'Timestamp': {
                  date: { 
                    start: new Date().toISOString() 
                  }
                },
                'GitHub Issue': {
                  url: issue.html_url
                }
              }
            });
            
            const options = {
              hostname: 'api.notion.com',
              path: '/v1/pages',
              method: 'POST',
              headers: {
                'Authorization': `Bearer ${process.env.NOTION_TOKEN}`,
                'Content-Type': 'application/json',
                'Notion-Version': '2022-06-28',
                'Content-Length': Buffer.byteLength(postData)
              }
            };
            
            const req = https.request(options, (res) => {
              let data = '';
              
              res.on('data', (chunk) => {
                data += chunk;
              });
              
              res.on('end', () => {
                if (res.statusCode === 200) {
                  console.log('✅ Successfully updated Notion database!');
                  const result = JSON.parse(data);
                  console.log('Created page ID:', result.id);
                } else {
                  console.error('❌ Notion API error:', data);
                }
              });
            });
            
            req.on('error', (e) => {
              console.error('❌ Request error:', e.message);
            });
            
            req.write(postData);
            req.end();
            
          } catch (error) {
            console.error('❌ Error updating Notion:', error.message);
          }

  notify-assignment:
    runs-on: ubuntu-latest
    if: github.event.action == 'opened' && contains(github.event.issue.title, '[업무분담]')
    
    steps:
    - name: Post Assignment Comment
      uses: actions/github-script@v7
      with:
        script: |
          const issue = context.payload.issue;
          
          const comment = '🎯 **새 업무가 할당되었습니다!**\\n\\n' +
            '업무를 확인하고 진행해주세요. 완료 후 이 Issue에 댓글로 보고해주시면 자동으로 상태가 업데이트됩니다.\\n\\n' +
            '### 📋 빠른 확인\\n' +
            '- Notion 데이터베이스에 자동 기록됨\\n' +
            '- 도움 필요시: 이 Issue에 댓글 작성\\n\\n' +
            '---\\n' +
            '*🤖 자동 알림: Task Management System v3*';
          
          await github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: comment
          });